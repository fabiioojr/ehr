openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/haniot/haniot-ehr-service/1.0.0
  - description: Local Host HTTP
    url: http://localhost
info:
  description: >-
    This is the RESTful API documentation of the microservice for HANIoT EHR platform .
  version: 1.0.0
  title: HANIoT EHR Service 
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
 
tags:   
  - name: pilotstudies.patients
    description: Operations for Patient resource.
  - name: pilotstudies.patients.sleephabits
    description: Operations for the patient Sleep Habit resource.
  - name: pilotstudies.patients.physicalactivityhabits
    description: Operations for the patient Physical Activity Habit resource.
  - name: pilotstudies.patients.feedinghabitsrecords
    description: Operations for the patient Feeding Habits Record resource.
  - name: pilotstudies.patients.medicalrecords
    description: Operations for the patient Medical Record resource.
  
  
paths: 
  # pilotstudies.patients
  /pilotstudies/{pilotstudy_id}/patients:
    post: 
      tags:
      - pilotstudies.patients
      summary: Register patient.
      description: Register a new patient.
      operationId: addPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      responses:
        '201':
          description: Patient successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the 
            schema. Normally it occurs due to validation issues, such as 
            fields that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register patients.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
           The server does not support the requested payload format. Only 
           application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        description: Data of the patient to be saved.
        required: true
    get:
      tags:
      - pilotstudies.patients
      summary: Recover patients.
      description: >- 
        Returns list with all patients. The query supports Field Selection, Paging, Sorting, and Filtering.
      operationId: getAllPatients
      parameters:
        - name: pilotstudy_id
          in: path
          required: true
          description: Id of pilot study.
          example: '5c86d00c2239a48ea20a0134'
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
        - $ref: '#/components/parameters/filterParam'
      responses:
        '200':
          description: List of patients.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get patients list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client 
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected 
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /pilotstudies/{pilotstudy_id}/patients/{patient_id}:
    get:
      tags:
      - pilotstudies.patients
      summary: Recover patient data.
      description: Recover the patient data. The query suports Fields param.
      operationId: getPatientById
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Requested patient data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get patient data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
           Specified resource does not exist. Usually when the URI is incorrect or the
           resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - pilotstudies.patients
      summary: Update patient data.
      description: Update the patient data.
      operationId: updatePatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      responses:
        '200':
          description: Updated patient data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update patient data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client 
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only 
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected 
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        description: Data of the patient to be updated.
        required: true
    delete:
      tags:
      - pilotstudies.patients
      summary: Delete patient data.
      description: Delete the patient data.
      operationId: deletePatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      responses:  
        '204':
          description: >- 
            Operation performed successfully. There is no data to be returned
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete patients.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
           Specified resource does not exist. Usually when the URI is incorrect or the
           resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          
  # pilotstudies.patients.sleephabits
  /pilotstudies/{pilotstudy_id}/patients/{patient_id}/sleephabits:
    post: 
      tags:
      - pilotstudies.patients.sleephabits
      summary: Register sleep habit.
      description: Register a sleep habit from patient.
      operationId: addSleepHabitFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      responses:
        '201':
          description: Sleep habit successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepHabit'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the 
            schema. Normally it occurs due to validation issues, such as 
            fields that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register sleep habits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
           The server does not support the requested payload format. Only 
           application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SleepHabit'
        description: Data of the sleep habit to be saved.
        required: true
    get:
      tags:
      - pilotstudies.patients.sleephabits
      summary: Recover sleep habits.
      description: >- 
        Returns list with all sleep habits from patient. The query supports Field Selection, Paging, Sorting, and Filtering.
      operationId: getAllSleepHabitsFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - $ref: '#/components/parameters/fieldsParam'
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/filterParam'
      responses:
        '200':
          description: List of sleep habits.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SleepHabit'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get sleep habits list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client 
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected 
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /pilotstudies/{pilotstudy_id}/patients/{patient_id}/sleephabits/{sleephabit_id}:
    get:
      tags:
      - pilotstudies.patients.sleephabits
      summary: Recover sleep habit data.
      description: Recover the patient sleep habit data. The query suports Fields param.
      operationId: getSleepDataFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: sleephabit_id
        in: path  
        required: true
        description: Id of sleep habit.
        example: '5c9137f2f6d3dba533e4cb36'
        schema:
          type: string  
      - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Requested sleep habit data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepHabit'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get patient sleep habit data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
           Specified resource does not exist. Usually when the URI is incorrect or the
           resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - pilotstudies.patients.sleephabits
      summary: Update sleep habit data.
      description: Update the patient sleep habit data.
      operationId: updateSleepHabitFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: sleephabit_id
        in: path  
        required: true
        description: Id of sleep habit.
        example: '5c9137f2f6d3dba533e4cb36'
        schema:
          type: string  
      responses:
        '200':
          description: Updated sleep habit data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepHabit'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update sleep habit data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client 
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only 
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected 
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SleepHabit'
        description: Data of the sleep habit to be updated.
        required: true
    delete:
      tags:
      - pilotstudies.patients.sleephabits
      summary: Delete sleep habit data.
      description: Delete the patient sleep habit data.
      operationId: deleteSleepHabitFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: sleephabit_id
        in: path  
        required: true
        description: Id of sleep habit.
        example: '5c9137f2f6d3dba533e4cb36'
        schema:
          type: string  
      responses:  
        '204':
          description: >- 
            Operation performed successfully. There is no data to be returned
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete sleep habit from patient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
           Specified resource does not exist. Usually when the URI is incorrect or the
           resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  # pilotstudies.patients.physicalactivityhabits
  /pilotstudies/{pilotstudy_id}/patients/{patient_id}/physicalactivityhabits:
    post: 
      tags:
      - pilotstudies.patients.physicalactivityhabits
      summary: Register physical activity habit.
      description: Register a physical activity habit from patient.
      operationId: addPhysicalActivityHabitFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      responses:
        '201':
          description: Physical Activity habit successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalActivityHabits'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the 
            schema. Normally it occurs due to validation issues, such as 
            fields that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register physical activity habits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
           The server does not support the requested payload format. Only 
           application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhysicalActivityHabits'
        description: Data of the physical activity habit to be saved.
        required: true
    get:
      tags:
      - pilotstudies.patients.physicalactivityhabits
      summary: Recover physical activity habits.
      description: >- 
        Returns list with all physical activity habits from patient. The query supports Field Selection, Paging, Sorting, and Filtering.
      operationId: getAllPhysicalActivityHabitsFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - $ref: '#/components/parameters/fieldsParam'
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/filterParam'
      responses:
        '200':
          description: List of physical activity habits.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhysicalActivityHabits'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get physical activity habits list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client 
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected 
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /pilotstudies/{pilotstudy_id}/patients/{patient_id}/physicalactivityhabits/{physicalactivityhabits_id}:
    get:
      tags:
      - pilotstudies.patients.physicalactivityhabits
      summary: Recover physical activity habits data.
      description: Recover the patient physical activity habits data. The query suports Fields param.
      operationId: getPhysicalActivityHabitsFromPacient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: physicalactivityhabits_id
        in: path  
        required: true
        description: Id of physical activity habits
        example: '5c9137f2cdff19618c05cf31'
        schema:
          type: string  
      - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Requested physical ativity habits data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalActivityHabits'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get patient physical activity habits data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
           Specified resource does not exist. Usually when the URI is incorrect or the
           resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - pilotstudies.patients.physicalactivityhabits
      summary: Update physical activity habits data.
      description: Update the patient physical activity habits data.
      operationId: updatePhysicalActivityHabitsFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: physicalactivityhabits_id
        in: path  
        required: true
        description: Id of physical activity habits
        example: '5c9137f2cdff19618c05cf31'
        schema:
          type: string  
      responses:
        '200':
          description: Updated physical activity habits data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalActivityHabits'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update physical activity habits data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client 
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only 
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected 
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhysicalActivityHabits'
        description: Data of the physical activity habits to be updated.
        required: true
    delete:
      tags:
      - pilotstudies.patients.physicalactivityhabits
      summary: Delete physical activity habits data.
      description: Delete the patient physical activity habits data.
      operationId: deletePhysicalActivityHabitsFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: physicalactivityhabits_id
        in: path  
        required: true
        description: Id of physical activity habits
        example: '5c9137f2cdff19618c05cf31'
        schema:
          type: string  
      responses:  
        '204':
          description: >- 
            Operation performed successfully. There is no data to be returned
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete physical activity habits from patient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
           Specified resource does not exist. Usually when the URI is incorrect or the
           resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
 
  # pilotstudies.patients.feedinghabitsrecords
  /pilotstudies/{pilotstudy_id}/patients/{patient_id}/feedinghabitsrecords:
    post: 
      tags:
      - pilotstudies.patients.feedinghabitsrecords
      summary: Register feeding habits record.
      description: Register a feeding habits record from patient.
      operationId: addFeedingHabitsRecordFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      responses:
        '201':
          description: Feeding habits record successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedingHabitsRecord'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the 
            schema. Normally it occurs due to validation issues, such as 
            fields that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register feeding habits records.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
           The server does not support the requested payload format. Only 
           application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedingHabitsRecord'
        description: Data of the feeding habits record to be saved.
        required: true
    get:
      tags:
      - pilotstudies.patients.feedinghabitsrecords
      summary: Recover feeding habits records.
      description: >- 
        Returns list with all feeding habits records from patient. The query supports Field Selection, Paging, Sorting, and Filtering.
      operationId: getAllFeedingHabitsRecordsFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - $ref: '#/components/parameters/fieldsParam'
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/filterParam'
      responses:
        '200':
          description: List of feeding habits records.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedingHabitsRecord'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get feeding habits records list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client 
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected 
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /pilotstudies/{pilotstudy_id}/patients/{patient_id}/feedinghabitsrecords/{feedinghabitsrecord_id}:
    get:
      tags:
      - pilotstudies.patients.feedinghabitsrecords
      summary: Recover feeding habits record data.
      description: Recover the patient feeding habits record data. The query suports Fields param.
      operationId: getFeedingHabitsRecordFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: feedinghabitsrecord_id
        in: path  
        required: true
        description: Id of feeding habits record.
        example: '5c9137f233b9b49d1c881189'
        schema:
          type: string  
      - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Requested feeding habits record data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedingHabitsRecord'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get patient feeding habits record data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
           Specified resource does not exist. Usually when the URI is incorrect or the
           resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - pilotstudies.patients.feedinghabitsrecords
      summary: Update feeding habits record data.
      description: Update the patient feeding habits record data.
      operationId: updateFeedingHabitsRecordFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: feedinghabitsrecord_id
        in: path  
        required: true
        description: Id of feeding habits record.
        example: '5c9137f233b9b49d1c881189'
        schema:
          type: string  
      responses:
        '200':
          description: Updated feeding habits record data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedingHabitsRecord'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update feeding habits record data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client 
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only 
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected 
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedingHabitsRecord'
        description: Data of the feeding habits record to be updated.
        required: true
    delete:
      tags:
      - pilotstudies.patients.feedinghabitsrecords
      summary: Delete feeding habits record data.
      description: Delete the patient feeding habits record data.
      operationId: deleteFeedingHabitsRecordFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: feedinghabitsrecord_id
        in: path  
        required: true
        description: Id of feeding habits record.
        example: '5c9137f233b9b49d1c881189'
        schema:
          type: string  
      responses:  
        '204':
          description: >- 
            Operation performed successfully. There is no data to be returned
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete feeding habits record from patient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
           Specified resource does not exist. Usually when the URI is incorrect or the
           resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  # pilotstudies.patients.medicalrecords
  /pilotstudies/{pilotstudy_id}/patients/{patient_id}/medicalrecords:
    post: 
      tags:
      - pilotstudies.patients.medicalrecords
      summary: Register medical record.
      description: Register a medical record from patient.
      operationId: addMedicalRecordFromPacient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      responses:
        '201':
          description: Medical record successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecord'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the 
            schema. Normally it occurs due to validation issues, such as 
            fields that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register medical records.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
           The server does not support the requested payload format. Only 
           application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
        description: Data of the medical record to be saved.
        required: true
    get:
      tags:
      - pilotstudies.patients.medicalrecords
      summary: Recover medical records.
      description: >- 
        Returns list with all medical records from patient. The query supports Field Selection, Paging, Sorting, and Filtering.
      operationId: getAllMedicalRecordsFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - $ref: '#/components/parameters/fieldsParam'
      - $ref: '#/components/parameters/pageParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/filterParam'
      responses:
        '200':
          description: List of medical records.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedingHabitsRecord'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get medical records list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client 
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected 
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
  /pilotstudies/{pilotstudy_id}/patients/{patient_id}/medicalrecords/{medicalrecord_id}:
    get:
      tags:
      - pilotstudies.patients.medicalrecords
      summary: Recover medical record data.
      description: Recover the patient medical record data. The query suports Fields param.
      operationId: getMedicalRecordFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: medicalrecord_id
        in: path  
        required: true
        description: Id of medical record.
        example: '5c9137f29293b51a067711c8'
        schema:
          type: string  
      - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Requested feeding habits record data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecord'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get patient medical record record data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
           Specified resource does not exist. Usually when the URI is incorrect or the
           resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
      - pilotstudies.patients.medicalrecords
      summary: Update medical record data.
      description: Update the patient medical record data.
      operationId: updateMedicalRecordFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: medicalrecord_id
        in: path  
        required: true
        description: Id of medical record.
        example: '5c9137f29293b51a067711c8'
        schema:
          type: string  
      responses:
        '200':
          description: Updated medical record data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecord'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update medical record data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client 
            for the application response. Only application/json is currently 
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only 
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected 
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
        description: Data of the medical record to be updated.
        required: true
    delete:
      tags:
      - pilotstudies.patients.medicalrecords
      summary: Delete medical record data.
      description: Delete the patient medical record data.
      operationId: deleteMedicalRecordFromPatient
      parameters:
      - name: pilotstudy_id
        in: path
        required: true
        description: Id of pilot study.
        example: '5c86d00c2239a48ea20a0134'
        schema:
          type: string
      - name: patient_id
        in: path  
        required: true
        description: Id of patient.
        example: '5c9137f2b8d3921ff3028378'
        schema:
          type: string
      - name: medicalrecord_id
        in: path  
        required: true
        description: Id of medical record.
        example: '5c9137f29293b51a067711c8'
        schema:
          type: string  
      responses:  
        '204':
          description: >- 
            Operation performed successfully. There is no data to be returned
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete medical record from patient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
           Specified resource does not exist. Usually when the URI is incorrect or the
           resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Patient:
      type: object
      required:
      - id
      - pilotstudy_id
      - first_name
      - last_name
      - gender
      - age
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5c9137f2b8d3921ff3028378'
        pilotstudy_id:
          type: string
          format: uuid
          description: Id of pilot study that patient is associated.
          example: '5c86d00c2239a48ea20a0134'
        first_name:
          type: string
          description: First name of patient.
          example: Elvis 
        last_name:
          type: string
          description: Last name of patient.
          example: Aaron 
        gender: 
          type: string
          description: GenderType of patient.
          enum: ['male', 'female']
        age:
          type: number
          description: Age of patient.
          example: 42
    SleepHabit:
      type: object
      required:
      - id
      - patient_id
      - created_at
      - week_day_sleep
      - week_day_wake_up
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5c9137f2f6d3dba533e4cb36'
        patient_id:
          type: string
          format: uuid
          description: Id of patient from feeding habits record.
          example: '5c9137f2b8d3921ff3028378'
        created_at:
          type: string
          description: Date of feeding habits record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'  
        week_day_sleep:
          type: number
          description: Approximate time the patient sleeps every day of the week.
          example: 22
        week_day_wake_up: 
          type: number
          description: Approximate time the patient wake up every day of the week.
          example: 22
    PhysicalActivityHabits:
      type: object
      required:
      - id
      - patient_id
      - created_at
      - school_activity_freq
      - weekly_activities
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5c9137f2cdff19618c05cf31'
        patient_id:
          type: string
          format: uuid
          description: Id of patient from feeding habits record.
          example: '5c9137f2b8d3921ff3028378'
        created_at:
          type: string
          description: Date of feeding habits record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00' 
        school_activity_freq:
          type: string
          description: School activity frequency from patient.
          enum: ['one_per_week', 'two_per_week','three_per_week', 'four_more_per_week', 'none']
          example: 'four_more_per_week'
        weekly_activities:
          type: array
          description: List of physical activities practiced by the patient.
          items:
            type: string
          example:
          - run
          - swim
    FeedingHabitsRecord:
      type: object
      required:
      - id
      - patient_id
      - created_at
      - weekly_feeding_habits
      - daily_water_glasses
      - six_month_breast_feeding
      - food_allergy_intolerance
      - breakfast_daily_frequency
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5c9137f233b9b49d1c881189'
        patient_id:
          type: string
          format: uuid
          description: Id of patient from feeding habits record.
          example: '5c9137f2b8d3921ff3028378'
        created_at:
          type: string
          description: Date of feeding habits record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'
        weekly_feeding_habits:
          type: array
          description: List of weekly foods and consumption frequency from patient.
          items:
            $ref: '#/components/schemas/WeeklyFoodRecord'
        daily_water_glasses:
          type: string
          description: Quantity of daily water glass consumption from patient. 
          enum: ['none', 'one_two', 'three_four', 'five_more', 'undefined']
          example: 'five_more'
        six_month_breast_feeding:
          type: string
          description: Breastfeeding level from patient in your first six months of life.
          enum: ['exclusive', 'complementary' ,'infant_formulas', 'other', 'undefined']
          example: 'complementary'
        food_allergy_intolerance:
          type: array
          description: Food allergy intolerance from patient.
          items:
            type: string
            enum: ['gluten', 'aplv', 'lactose', 'dye', 'egg', 'peanut', 'other', 'undefined' ]
          example:
          - gluten
          - other
        breakfast_daily_frequency:
          type: string
          description: Breakfast daily frequency from patient.
          enum: ['never', 'sometimes', 'almost_everyday', 'everyday', 'undefined']
          example: 'everyday'
    WeeklyFoodRecord:
      type: object
      required:
      - food
      - seven_days_freq
      properties:
        food:
          type: string
          description: Name of food.
          example: 'bread'
        seven_days_freq:
          type: string
          description: Weekly frequency of food consumption.
          enum: ['never', 'no_day', 'one_two_days', 'three_four_days', 'five_six_days', 'all_days', 'undefined']
          example: 'all_days'
    MedicalRecord:
      type: object
      required:
      - id
      - patient_id
      - created_at
      - chronic_diseases
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5c9137f29293b51a067711c8'
        patient_id:
          type: string
          format: uuid
          description: Id of patient from medical record.
          example: '5c9137f2b8d3921ff3028378'
        created_at:
          type: string
          description: Date of medical record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'
        chronic_diseases:
          type: array
          description: List of chronic diseases from patient.
          items:
            $ref: '#/components/schemas/ChronicDisease'
    ChronicDisease:
      type: object
      required:
      - type
      - disease_history
      properties:
        type:
          type: string
          description: Type of chronic disease from pacient.
          enum: ['hipertension', 'blood_fat', 'diabetes']
        disease_history:
          type: string
          description: Disease history from pacient.
          enum: ['yes', 'no', 'undefined']
    Error:
      type: object
      description: >-
        Default template for error message. All returned errors will follow this
        template.
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: >-
            Unique API code that indicates specific details of the error, or
            the actual status code of the response when the unique code is not
            appropriate.
        message:
          type: string
          description: Readable and short description of the error.
        description:
          type: string
          description: Detailed description of the error.
        redirect_link:
          type: string
  parameters:
    fieldsParam:
      in: query
      name: fields
      required: false
      description: >-
        Allows you to retrieve only the information you want. To do this, 
        simply provide the name of the attributes separated by commas. 
        For example: **_fields=field1,field2_** indicates that only 
        field1 and field2 should be listed in the query result.
      schema:
        type: array
        items:
          type: string
    pageParam:
      in: query
      name: page
      required: false
      description: The page number.
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    limitParam:
      in: query
      name: limit
      required: false
      description: The number of items to return.
      schema:
        type: integer
        format: int32
        maximum: 100
        default: 20
    sortParam:
      in: query
      name: sort
      required: false
      description: >-
        Contains the names of the attributes, separated by commas, that
        will be used to sort the result of the query. For ascending sort,
        use the '+' character before the attribute name. For descending 
        sort, use the '-' character before the attribute name. By default,
        the order is ascending, so the '+' symbol is optional, just enter
        the attribute.
      schema:
        type: array
        items:
          type: string
        default:
          - created_at
    filterParam:
      in: query
      name: ''
      required: false
      description: >-
        To filter a collection by multiple concurrent attributes or filter 
        multiple values for an attribute, simply use the attribute/property
        name with an equal sign and the expected values, separated by a comma.
        **_property=value1,value2,value3_**. The query is not case sensitive.
        Example: **_?name=elvis,john_** to retrieve exactly the same users with 
        elvis or john name.
        For filtering with logical operators, just follow the syntax:
        **_property=operator:value_**. The available operators are:
         - **gt** -> Defines which value of the attribute is greater than 
                    (that is,>) the specified value.
         - **gte** -> Defines which attribute value is greater than or equal to
                    (that is,>=) the specified value.
         - **lt** -> Define the value of the attribute to be less than (that is, <)
                    the specified value.
         - **lte** -> Defines which value of the attribute is less than or equal to 
                    (that is, <=) the specified value.

        Example: **_?field1=gte:80&age=lt:100_** to recover the users with age 
        is greater than or equal to 80 and less then 100.
      schema:
        type: string
    dateStartParam:
      in: query
      name: date_start
      required: false
      description: >-
        Define start date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss. The
        attribute used for the query will be the registration_date.
      schema:
        type: string
    dateEndParam:
      in: query
      name: date_end
      required: false
      description: >-
        Define end date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss.The
        attribute used for the query will be the registration_date. 
      schema:
        type: string
        default: today
    periodParam:
      in: query
      name: period
      required: false
      description: |-
        Sets the period from the available ones:
         - **[1..n]d** - Total days (1d, 2d, ...)
         - **[1..n]w** - Total of weeks (1w, 2w, ...)
         - **[1..n]m** - Total of months (1m, 2m, ...)
         - **[1..n]y** - Total of years (1y, 2y, ...)
        The attribute used for the query will be the registration_date.
      schema:
        type: string
